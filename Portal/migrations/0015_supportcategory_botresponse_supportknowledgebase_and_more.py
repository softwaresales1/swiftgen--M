# Generated by Django 5.1.3 on 2025-10-03 18:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Portal', '0014_contentmoderationlog_usernotification_usersuspension_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupportCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='fas fa-question-circle', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Support Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BotResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('trigger_type', models.CharField(choices=[('keyword', 'Keyword Match'), ('category', 'Category Based'), ('pattern', 'Pattern Match'), ('fallback', 'Fallback Response')], max_length=20)),
                ('trigger_keywords', models.JSONField(default=list, help_text='Keywords that trigger this response')),
                ('trigger_patterns', models.TextField(blank=True, help_text='Regex patterns for matching', null=True)),
                ('priority', models.IntegerField(default=0, help_text='Higher priority responses are checked first')),
                ('response_text', models.TextField()),
                ('response_html', models.TextField(blank=True, null=True)),
                ('suggest_escalation', models.BooleanField(default=False)),
                ('require_human_followup', models.BooleanField(default=False)),
                ('close_ticket_after', models.BooleanField(default=False)),
                ('quick_actions', models.JSONField(blank=True, default=list)),
                ('usage_count', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bot_responses', to='Portal.supportcategory')),
            ],
            options={
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SupportKnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('article_type', models.CharField(choices=[('faq', 'FAQ'), ('guide', 'How-to Guide'), ('troubleshooting', 'Troubleshooting'), ('policy', 'Policy Document')], default='faq', max_length=20)),
                ('summary', models.TextField(help_text='Brief summary for search results')),
                ('content', models.TextField()),
                ('content_html', models.TextField(blank=True, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('search_keywords', models.JSONField(blank=True, default=list)),
                ('view_count', models.IntegerField(default=0)),
                ('helpful_votes', models.IntegerField(default=0)),
                ('not_helpful_votes', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kb_articles', to='Portal.supportcategory')),
            ],
            options={
                'ordering': ['-featured', 'sort_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('messages_sent', models.IntegerField(default=0)),
                ('bot_responses_received', models.IntegerField(default=0)),
                ('escalated_to_human', models.BooleanField(default=False)),
                ('ticket_created', models.BooleanField(default=False)),
                ('satisfaction_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('guest_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('guest_name', models.CharField(blank=True, max_length=100, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('pending_user', 'Pending User Response'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('bot_handled', models.BooleanField(default=False)),
                ('escalated_to_human', models.BooleanField(default=False)),
                ('escalation_reason', models.TextField(blank=True, null=True)),
                ('first_response_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('satisfaction_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Portal.supportcategory')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('bot', 'Bot Response'), ('human', 'Human Agent'), ('system', 'System Message')], max_length=10)),
                ('sender_name', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('bot_confidence', models.FloatField(blank=True, null=True)),
                ('bot_trigger_keywords', models.JSONField(blank=True, default=list)),
                ('suggested_escalation', models.BooleanField(default=False)),
                ('read_by_user', models.BooleanField(default=False)),
                ('read_by_agent', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='Portal.supportticket')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
